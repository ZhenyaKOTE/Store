@model Store.Models.RegisterModel
@using Store.Models
@using Newtonsoft.Json;
@{
    ViewBag.Title = "Register";
}

<br>
<h2 align="left">Реєстрація</h2>
<hr>
@*"Register","api/AccountApi", FormMethod.Post*@

<div id="RegisterView">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                <div class="col-md-10">
                    @*@Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @placeholder = "Email" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })*@
                    <input placeholder="Email" id="InputEmail" class="form-control" />
                    <label id="ValidationMessage" class="text-danger" hidden>Тут тіпа ошибка</label>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-10">
                    @*@Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Name" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })*@
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-10">
                    @*@Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @placeholder = "Password" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })*@
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-10">
                    @*@Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", @placeholder = "Confirm Your Password" } })
                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })*@
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="button" onclick="Register()" value="Зареєструватися" class="btn btn-success" />
                </div>
            </div>
        </div>

    }
</div>


<script>


    function RegisterModel() {
        let Email = ""
    }


    var w = window.innerHeight;
    var container = document.getElementById('RegisterView');
    container.style.minHeight = (w - 130) + "px"; //130 - height: header and footer

    function Register() {

        $(function () {
            let Email = $("#InputEmail").val();

            $.ajax({
                type: "POST",
                url: '@Url.Action("Register", "api/AccountApi")',
                data: { "Email": Email, "Password": "", "ConfirmPassword": "", "Name": "" },
                success: function (msg)
                {
                    console.log("Ala");
                },
                error: function (error) {

                    console.log(error.responseJSON);
                    let jsonErrors = { "message": (error.responseJSON["message"]), "modelState": (error.responseJSON["modelState"]) };
                    
                    let Model = { "Email": (jsonErrors.modelState["userModel.Email"]) }
                   
                    if (Model.Email != null) {
                        let secondModel = { "Array": Model.Email["0"] }
                        //console.log(secondModel.Array);
                        let EmailBlock = document.getElementById("ValidationMessage");
                        EmailBlock.innerText = secondModel.Array;
                        EmailBlock.hidden = false;
                    }
                    else
                    {
                        let EmailBlock = document.getElementById("ValidationMessage");
                        Email.class = "text-secondary";
                        EmailBlock.innerText = "Email is valid";
                        EmailBlock.classList.remove("text-danger");
                        EmailBlock.classList.add("text-secondary");
                    }
                    //$("#ValidationMessage").hidden = false;
                }


            });
        });
    }

</script>