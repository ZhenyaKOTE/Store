@model Store.Models.RegisterModel
@using Store.Models
@using Newtonsoft.Json;
@{
                /**/

                ViewBag.Title = "Register";
}

<br>
<h2 align="left">Реєстрація</h2>
<hr>
@*"Register","api/AccountApi", FormMethod.Post*@

<div id="RegisterView">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                <div class="col-md-10">
                    <input placeholder="Email" id="InputEmail" class="form-control" />
                    <label id="ValidationMessageEmail" style="margin-left: 15px;" class="text-danger" hidden></label>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-10">
                    <input placeholder="Name" id="InputName" class="form-control" />
                    <label id="ValidationMessageName" style="margin-left: 15px" class="text-danger" hidden></label>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-10">
                    <input placeholder="Password" id="InputPassword" class="form-control" />
                    <label id="ValidationMessagePassword" style="margin-left: 15px" class="text-danger" hidden></label>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-10">
                    <input placeholder="Confirm password" id="InputConfirmPassword" class="form-control" />
                    <label id="ValidationMessageConfirmPassword" style="margin-left: 15px" class="text-danger" hidden></label>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="button" onclick="Register()" value="Зареєструватися" class="btn btn-success" />
                </div>
            </div>
        </div>

    }
</div>


<script>
    function Register() {

        //let IdValidationMessages = {"ValidationMessageEmail", }

        function ValidateInput(ModelValidation, Id)
        {
            if (ModelValidation != null) {
                let tmp = document.getElementById(Id);
                tmp.innerText = "";

                for (let i = 0; i < ModelValidation.length; i++)
                    tmp.innerText += "♦ " + ModelValidation[i]+"\n";

                tmp.hidden = false;
            }
            else {
                let tmp = document.getElementById(Id);
                tmp.hidden = true;
            }
        }

        $(function () {
            let Email = $("#InputEmail").val();
            let Name = $("#InputName").val();
            let Password = $("#InputPassword").val();
            let ConfirmPassword = $("#InputEmail").val();
            $.ajax({
                type: "POST",
                url: '@Url.Action("Register", "api/AccountApi")',
                data: { "Email": Email, "Password": Password, "ConfirmPassword": ConfirmPassword, "Name": Name },
                success: function (msg)
                {
                    //alert("Registration was succed");
                },
                error: function (error) {

                    //console.log(error.responseJSON);
                    let jsonErrors = { "Message": (error.responseJSON["Message"]), "ModelState": (error.responseJSON["ModelState"]) };

                    let ModelValidation = {
                        "Email": (jsonErrors.ModelState["userModel.Email"]),
                        "Name": (jsonErrors.ModelState["userModel.Name"]),
                        "Password": (jsonErrors.ModelState["userModel.Password"]),
                        "ConfirmPassword": (jsonErrors.ModelState["userModel.ConfirmPassword"])
                    }

                    ValidateInput(ModelValidation.Email, "ValidationMessageEmail");
                    ValidateInput(ModelValidation.Name, "ValidationMessageName");
                    ValidateInput(ModelValidation.Password, "ValidationMessagePassword");
                    ValidateInput(ModelValidation.ConfirmPassword, "ValidationMessageConfirmPassword");

                }
            });
        });
    }
</script>

