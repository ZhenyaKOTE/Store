@model Store.Models.RegisterModel

@{
    ViewBag.Title = "Register";
}

<h2>Register</h2>

@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "validate form-horizontal", role = "form" }))
{

    <br>
    @Html.AntiForgeryToken()
    <h4>Create a new account.</h4>
    <hr />

    <div class="form-group">
        <div class="col-md-10">
            @Html.EditorFor(x => x.Email, new { htmlAttributes = new { @class = "form-control override-form-control required", @placeholder = "Email", type = "Email", required = "required" } })
            @Html.ValidationMessageFor(x => x.Email, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-10">
            @Html.EditorFor(x => x.Login, new { htmlAttributes = new { @class = "form-control", @placeholder = "Login", required = "required" } })
            @Html.ValidationMessageFor(x => x.Login, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-10">
            @Html.EditorFor(x => x.Password, new { htmlAttributes = new { @class = "form-control", @placeholder = "Password", @type = "password", required = "required" } })
            @Html.ValidationMessageFor(x => x.Password, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-10">
            @Html.EditorFor(x => x.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", @placeholder = "Confirm Password", required = "required", type = "password" } })
            @Html.ValidationMessageFor(x => x.ConfirmPassword, "", new { @class = "text-danger" })
        </div>
    </div>

    <div>
        <input type="submit" class="btn btn-success" value="Register" />
    </div>
}

